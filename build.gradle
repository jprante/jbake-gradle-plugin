
ext {
    user = 'xbib'
    name = 'gradle-plugin-jbake'
    pluginDescription = 'Gradle plugin for jbake'
    scmUrl = 'https://github.com/' + user + '/' + name
    scmConnection = 'scm:git:git://github.com/' + user + '/' + name + '.git'
    scmDeveloperConnection = 'scm:git:git://github.com/' + user + '/' + name + '.git'
}

buildscript {
  repositories {
    jcenter()
    maven {
      url "https://plugins.gradle.org/m2/"
    }
  }
  dependencies {
    classpath 'com.gradle.publish:plugin-publish-plugin:0.9.4'
    classpath 'co.riiid:gradle-github-plugin:0.4.2'
  }
}

group = 'org.xbib.gradle.plugin'
version = '1.1.0'

apply plugin: 'groovy'
apply plugin: 'maven'
apply plugin: 'signing'
apply plugin: 'co.riiid.gradle'
apply plugin: "com.gradle.plugin-publish"

repositories {
    mavenLocal()
    mavenCentral()
    jcenter()
}

configurations {
    wagon
}

dependencies {
    compile gradleApi()
    compileOnly 'org.jbake:jbake-core:2.4.0'
    testCompile('org.spockframework:spock-core:0.7-groovy-2.0') {
        exclude group:'org.codehaus.groovy'
    }
    wagon 'org.apache.maven.wagon:wagon-ssh-external:2.10'
}

task javadocJar(type: Jar, dependsOn: classes) {
    from javadoc
    classifier 'javadoc'
}

task sourcesJar(type: Jar, dependsOn: classes) {
    from sourceSets.main.allSource
    classifier 'sources'
}

artifacts {
    archives javadocJar, sourcesJar
}

if (project.hasProperty('signing.keyId')) {
    signing {
        sign configurations.archives
    }
}

apply from: 'gradle/git.gradle'
apply from: 'gradle/publish.gradle'


if (project.hasProperty('gradle.publish.key')) {
    pluginBundle {
        website = scmUrl
        vcsUrl = scmUrl
        plugins {
            jbakePlugin {
                id = 'org.xbib.gradle.plugin.jbake'
                description = pluginDescription
                displayName = 'Gradle JBake plugin'
                tags = ['jbake']
                version = project.version
            }
        }
    }
}